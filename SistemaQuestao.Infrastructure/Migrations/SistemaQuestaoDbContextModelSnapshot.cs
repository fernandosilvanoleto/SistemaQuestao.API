// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SistemaQuestao.Infrastructure.Persistence;

namespace SistemaQuestao.Infrastructure.Migrations
{
    [DbContext(typeof(SistemaQuestaoDbContext))]
    partial class SistemaQuestaoDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SistemaQuestao.Core.Entities.Area", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Nome")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.HasKey("Id");

                    b.ToTable("Areas");
                });

            modelBuilder.Entity("SistemaQuestao.Core.Entities.AreaDisciplina", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdArea")
                        .HasColumnType("int");

                    b.Property<int>("IdDisciplina")
                        .HasColumnType("int");

                    b.Property<int>("StatusAreaDisciplina")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdArea");

                    b.HasIndex("IdDisciplina");

                    b.ToTable("AreaDisciplinas");
                });

            modelBuilder.Entity("SistemaQuestao.Core.Entities.Assunto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descricao")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<int?>("IdAssuntoPai")
                        .HasColumnType("int");

                    b.Property<int>("IdDisciplina")
                        .HasColumnType("int");

                    b.Property<string>("Observacao")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdAssuntoPai");

                    b.HasIndex("IdDisciplina");

                    b.ToTable("Assuntos");
                });

            modelBuilder.Entity("SistemaQuestao.Core.Entities.Disciplina", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Complemento")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nome")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.HasKey("Id");

                    b.ToTable("Disciplinas");
                });

            modelBuilder.Entity("SistemaQuestao.Core.Entities.AreaDisciplina", b =>
                {
                    b.HasOne("SistemaQuestao.Core.Entities.Area", "Area")
                        .WithMany("AreaDisciplinas")
                        .HasForeignKey("IdArea")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SistemaQuestao.Core.Entities.Disciplina", "Disciplina")
                        .WithMany("AreaDisciplinas")
                        .HasForeignKey("IdDisciplina")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Area");

                    b.Navigation("Disciplina");
                });

            modelBuilder.Entity("SistemaQuestao.Core.Entities.Assunto", b =>
                {
                    b.HasOne("SistemaQuestao.Core.Entities.Assunto", "AssuntoPai")
                        .WithMany("AssuntoPaiList")
                        .HasForeignKey("IdAssuntoPai")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("SistemaQuestao.Core.Entities.Disciplina", "Disciplina")
                        .WithMany("Assuntos")
                        .HasForeignKey("IdDisciplina")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("AssuntoPai");

                    b.Navigation("Disciplina");
                });

            modelBuilder.Entity("SistemaQuestao.Core.Entities.Area", b =>
                {
                    b.Navigation("AreaDisciplinas");
                });

            modelBuilder.Entity("SistemaQuestao.Core.Entities.Assunto", b =>
                {
                    b.Navigation("AssuntoPaiList");
                });

            modelBuilder.Entity("SistemaQuestao.Core.Entities.Disciplina", b =>
                {
                    b.Navigation("AreaDisciplinas");

                    b.Navigation("Assuntos");
                });
#pragma warning restore 612, 618
        }
    }
}
